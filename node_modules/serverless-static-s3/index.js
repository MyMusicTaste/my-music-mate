'use strict';

const AWS = require('aws-sdk');
const fs = require("fs");

AWS.config.update({region:'us-east-1'});
AWS.config.setPromisesDependency(require('bluebird'));
const awsHelper = require('./aws-helper');
const fileHelper = require('./file-helper');
const delayPromise = require('./promise-delay');

class ServerlessS3Static {
  constructor(serverless, options) {
    this.serverless = serverless;
    this.options = options;

    this.commands = {
      static: {
        lifecycleEvents: [
          'deploy'
        ]
      }
    };
    
    this.hooks = {
      'static:deploy': this.deployStatic.bind(this),
    };
    
    if (this.serverless.service.custom.static.deploy) {
    	this.hooks[this.serverless.service.custom.static.deploy] = this.deployStatic.bind(this);
    }
	  
    awsHelper.setConfig({
	    '${self:custom.namespace}' : this.serverless.service.service + '-' + this.serverless.service.provider.stage,
	    '${self:provider.region}': this.serverless.service.provider.region,
	    '${AWS::AccountId}': this.serverless.service.custom.aws.id,
    });
    
    const cloudformation = new AWS.CloudFormation();
    
		const params = {
			StackName: this.serverless.service.service + '-' + this.serverless.service.provider.stage, /* required */
		};
		cloudformation.listStackResources(params).promise().then((success) => {
			let s3BucketName = null;
			success.StackResourceSummaries.forEach((resource) => {
				if (resource.LogicalResourceId === 'ServerlessDeploymentBucket') {
					s3BucketName = resource.PhysicalResourceId
				}
				
			});
			if (s3BucketName) {
				const s3BucketAddress = 'https://s3.amazonaws.com/' + s3BucketName;
				const staticSourceDirectory = process.cwd() + this.serverless.service.custom.static.source;
				const staticDestinationDirectory = process.cwd() + this.serverless.service.custom.static.destination;
				const pattern = '${s3}';
				fileHelper.copyFilesWithReplace(s3BucketName, staticSourceDirectory, staticDestinationDirectory, pattern, s3BucketAddress);
			}
		}).catch((error) => {
			console.log(error)
		});
  }

  deployStatic() {
    this.serverless.cli.log('Deploying static files...');
  }
}

module.exports = ServerlessS3Static;
