const AWS = require('aws-sdk');
const lex = new AWS.LexModelBuildingService();
const lambda = new AWS.Lambda();


removePermission = function (functionName) {
  const params = {
    "FunctionName": functionName,
    "StatementId": functionName
  };
  return lambda.removePermission(params).promise();
};

addPermission = function (functionName, sourceArn) {
  const params = {
    "Action": "lambda:InvokeFunction",
    "FunctionName": functionName,
    "Principal": "lex.amazonaws.com",
    "SourceArn": sourceArn,
    "StatementId": functionName
  };
  return lambda.addPermission(params).promise();
};

getIntent = function (blueprint) {
	const params = {
   name: blueprint.name,
   version: "$LATEST"
  };
  return lex.getIntent(params).promise();
};

putIntent = function (blueprint) {
	const params = blueprint;
	// Add checksum params if the bot is already exist.
  if (params.checksum !== null) {
    params['checksum'] = params.checksum
  }
  return lex.putIntent(params).promise();
  // console.log(JSON.stringify(params, null, 2));
};

getBot = function (config) {
  const params = {
   name: config.name,
   versionOrAlias: "$LATEST"
  };
  return lex.getBot(params).promise();
};

putBot = function (config) {
  const params = {
    name: config.name,
    description: 'Lex for the MMT Slack bot.',
    intents: [
       {
      intentName: "TodaysWeather",
      intentVersion: "$LATEST"
     }
    ],
    clarificationPrompt: {
     maxAttempts: 1,
     messages: [
        {
       content: "I'm sorry, I didn't hear that. Can you repeate what you just said?",
       contentType: "PlainText"
      },
        {
       content: "Can you say that again?",
       contentType: "PlainText"
      }
     ]
    },
    abortStatement: {
     messages: [
        {
       content: "I don't understand. Can you try again?",
       contentType: "PlainText"
      },
        {
       content: "I'm sorry, I don't understand.",
       contentType: "PlainText"
      }
     ]
    },
    idleSessionTTLInSeconds: 300,
    processBehavior: "BUILD",
    locale: "en-US",
    childDirected: false
  };
  // Add checksum params if the bot is arleay exist.
  if (config.checksum !== null) {
    params['checksum'] = config.checksum
  }
  return lex.putBot(params).promise();
};

module.exports = {
	removePermission,
	addPermission,
  getBot,
  putBot,
	getIntent,
	putIntent
};
